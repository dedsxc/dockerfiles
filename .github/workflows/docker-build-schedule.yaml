name: Schedule build docker
on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *' 

env:
  GHCR_REGISTRY: ghcr.io
  GHCR_REGISTRY_REPO: dedsxc

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      
      - name: Get repository name
        id: get_repo_name
        run: |
          result=$(echo "$GITHUB_REPOSITORY" | awk -F'/' '{print $2}')
          echo "repo_name=$result" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3
    
      - name: Configure Docker
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ secrets.CI_BOT_USERNAME }}
          password: ${{ secrets.CI_BOT_TOKEN }}

      - name: Build-Push 
        run: |
          for container in $(find ./containers -mindepth 1 -maxdepth 1 -type d ! -name '.*' -printf '%f\n'); do
            upstream_version=$(./$container/VERSION)
            current_version=$(curl -sL -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.CI_BOT_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/user/packages/container/$container/versions | jq -r '.[] | select(.metadata.container.tags | length > 0) | .metadata.container.tags[]' | grep -v '^pr' | sort -V | tail -n1)
            if [ "$upstream_version" != "$current_version" ]; then
              echo -e "\e[32m[+] New version for $container found: $upstream_version\e[0m"
              platform=$(cat ./$container/PLATFORM)
              docker buildx build --push --platform $platform -t ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REGISTRY_REPO }}/$container:$upstream_version ./$container
            else
              echo "$container is up to date version: $current_version"
            fi
          done
