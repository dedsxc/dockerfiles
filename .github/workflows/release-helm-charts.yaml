name: "Release helm chart"

on:
  push:
    branches:
      - "main"
    paths:
      - "helm/**"

# need for release-please action
permissions:
  contents: write
  id-token: write  
  attestations: write
  packages: write
  actions: write
  pull-requests: read

env:
  GHCR_REGISTRY: ghcr.io
  GHCR_REGISTRY_REPO: dedsxc

jobs:
  release-please:
    runs-on: ubuntu-latest 
    outputs:
      paths_released: ${{ steps.release-please.outputs.paths_released }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Generate Token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIV_KEY }}"

      - uses: googleapis/release-please-action@c2a5a2bd6a758a0937f1ddb1e8950609867ed15c # v4
        id: release-please
        with:
          token: ${{ steps.app-token.outputs.token }}
          # Advanced configuration: https://github.com/googleapis/release-please/blob/main/docs/manifest-releaser.md
          config-file: .github/release-please-config.json
          manifest-file: .github/.release-please-manifest.json
      

  # Run the following section to push Chart if a release is created
  release-charts:
    name: Release charts
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.paths_released != '[]' }}
    strategy:
      fail-fast: false 
      matrix:
        charts: ${{ fromJson(needs.release-please.outputs.paths_released) }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - name: Set up Helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4.3.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: dedsxc
          password: ${{ secrets.CI_BOT_TOKEN }}

      - name: Push Chart
        run: |
          chart_name=$(basename ${{ matrix.charts }})
          chart_version=$(yq e '.version' ${{ matrix.charts }}/Chart.yaml)
          helm package ${{ matrix.charts }} --dependency-update
          helm push $chart_name-$chart_version.tgz oci://${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REGISTRY_REPO }}
